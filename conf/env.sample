## This is a template env file. 
## Name this after your DOCKER_CONTAINER_PREFIX (see below) with "_env" postfix.
## Going with the example below, this should be 'example_env'.
##
PROJECT_NAME=ExampleProject
DOCKER_CONTAINER_PREFIX=example

## RELATIVE_DOCKERCOMPOSE_DIR - Defined when your actual docker-compose.yml is beneath another
##     directory from expected location.
##
##     You DO NOT define if your docker-compose.yml for "cooltool" (your project) is as follows:
##
##        |\- docksite
##        |
##        \- cooltool
##              \--> docker-compose.yml
##
##     BUT if it's like below, there's a need to define.
##     This means, that relative to "cooltool" directory, a subdirectory "website" is the location
##     of docker-compose.yml
##
##        |\- docksite
##        |
##        \- cooltool
##             |\--> other_systems
##             |\--> website
##                 \--> docker-compose.yml
##
#~RELATIVE_DOCKERCOMPOSE_DIR=website

## AUTOSTART_PROJECT - gives control to developers if project is startable without manual intervention.
##      It is OFF by default. Enable it by making its value 1
AUTOSTART_PROJECT=0

## DOCKTIE_SERVICES_TO_START - Useful if you're using laradock or other dev environment with a lot of services
##      and you want to just run a few of them.
#~DOCKTIE_SERVICES_TO_START="nginx php-fpm mysql"
DOCKTIE_SERVICES_TO_START=""

## PROJECT_* - Define environment variables for this project per https://github.com/docktie/docktie/issues/33
##             NOTE: Does not accept yet a shell variable (e.g. $RELATIVE_DOCKERCOMPOSE_DIR cannot be used yet)
##             Shown as part of 'docktie_cli env'
##
#~ PROJECT_BACKEND=website/src/backend
#~ PROJECT_FRONTEND=website/src/frontend
